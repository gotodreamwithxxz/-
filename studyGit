版本管理工具git（分布式）
    1.备份文件  2.记录历史  3.回到过去(文件)  4.多端共享  5.团队协作
    github是社区网站，软件托管网站 
    学会在Windows检出项目和提交项目，Desktop操作
  问题  
    代码冲突的解决
    回到过去（commit ID）：（git log）回到过去找到代码，找到commit ID;
        然后git reset --hard commitID ;然后git reflog，找到最近pull的commit ID，
        继续git reset --hard commitID即可将过去的代码带回到现在
    建立里程碑（某个版本release）
    分支branch，以及合并     

-------------------------------------------------------------------------------------------------------
  git直接记录快照，而非差异比较;近乎所有操作都是本地执行;Git 保证完整性SHA-1 散列（hash，哈希）;Git 一般只添加数据
  Git 有三种状态，你的文件可能处于其中之一：已提交（committed）、已修改（modified）和已暂存（staged）。 
      已提交表示数据已经安全的保存在本地数据库中。 
      已修改表示修改了文件，但还没保存到数据库中。 
      已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。
  基本的 Git 工作流程如下：
    在工作目录中修改文件。
    暂存文件，将文件的快照放入暂存区域。暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。
    提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。
